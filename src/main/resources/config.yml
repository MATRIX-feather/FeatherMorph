#FeatherMorph plugin options
root:

  # ChatOverride options
  chatOverride:
    # Enable ChatOverride?
    # Once enabled, we will attempt to change someone's chat message to a configured content if they disguised as something.
    # The "morph:chat_override" ability needs to be added to disguise's abilities in order to activate this feature.
    allowOverride: false

    # Should we try to override existing chat plugin?
    # This will make sure that the owner name can be changed correctly, but may cause compatibility issues.
    UseCustomRenderer: true

  # Language options
  language:
    # Sets the default language for plugin
    # This will affect most ingame messages and bossbar title
    code: en_us

    # Enable single-language mode?
    # Once enabled, all ingame messages will be forced to use default language.
    # Otherwise, we will send ingame messages depend on which language the player uses.
    # Some features may not be affected by this option.
    single_language: true

  # Skill cooldown on damage.
  # Defines how many ticks should a player wait at least before they activate the skill again when they get damaged.
  cooldown_on_damage: 15

  # Action item
  # Defines which item should player use to disguise/undisguise or activate skill.
  action_item: minecraft:carrot_on_a_stick

  # Should we make Armor Stand disguises show arms by default?
  armorstand_show_arms: true

  # Should players undisguise themselves on death?
  unmorph_on_death: true

  # Should we allow players disguise themselves by using skulls/heads?
  allowHeadMorph: true

  # Should piglin brutes ignore player's disguise?
  piglin_brute_ignore_disguises: true

  # Health scale options
  health_scale:
    # Enable health scale?
    # Once enabled, we will attempt to scale player's base health depending on their disguise type.
    # Only affects vanilla disguises.
    enabled: true

    # Maximum base health
    # Will cap player base health to the configured value if they exceed it.
    max_health: 60

  # Should we allow local disguises from LibsDisguises?
  # PS: Local disguise are disguises you save by `/savedisg`
  # PS: Due to API limitations, we can't figure out whether someone's disguise is a custom disguise.
  #     This may cause issues when coping disguise.
  enable_ld_custom_disguises: false

  # Bossbar options
  bossbar:
    # Should we display bossbars to players?
    # Disable this will also disable the bossbar ability for all disguises.
    enabled: true

 # InteractionMirror options
  reverseControl:
    # Maximum affect distance
    # How far should we find for the target player to mirror?
    # Set to 0 to disable this feature, or -1 to disable the limit.
    normalDistance: -1

    # Should we ignore disguised players when finding target?
    ignore_disguised: true

    # Block destroy timeout
    # How many ticks should we wait to reset progress when simulating block destroy if there's no operation?
    # Values that are too small may cause the progress to reset repeatedly with a bad network.
    destroy_timeout: 20

    # Behavior options
    behaviors:
      # Should we enable interaction control?
      simulate_interactions: true

      # Should we enable sneaking control?
      sneak: false

      # Should we enable swapping control?
      swap_hands: false

      # Should we enable drop control?
      allow_drop: false

      # Should we enable hotbar control?
      hotbar: false

  # Banned disguises
  # Disguises in this list won't be available in-game for anyone.
  bannedDisguises: []

  # Client integration options
  client:
    # Should we allow client integrations?
    allow_client_mod: true

    # Should we log packets coming from the client?
    log_incoming_packets: false

    # Should we kick players if their client mod doesn't match our API version?
    # Note: Players may have their own mod implementing our API, so don't treat this as an anti-cheat feature.
    force_version: false

    # Should we log packets sending to the client?
    log_outgoing_packets: false

  # Do not touch unless you know what you're doing!
  version: 14
